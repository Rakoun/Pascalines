<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Pascalines.Views.Tools.ConverterPage"
    DataContext="{Binding [ConverterViewModel], Source={StaticResource ViewModelLocator}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Pascalines.Views.Tools"
    xmlns:common="using:Pascalines.Views.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <!--DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"-->

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">My Application</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <!--<TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>-->
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{Binding CalculatorName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <!-- Contenu de la calculatrice -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
			<!-- Première ligne -->
            <TextBlock Text="{Binding CalculationLineLabel}" Grid.ColumnSpan="5"/>
            <TextBox Text="{Binding CalculationLine}" Grid.ColumnSpan="5" Grid.Row="1"/>
            <Button Content="{Binding BtEqualLabel}" Grid.Column="5" Grid.Row="1" />
            <TextBox Text="{Binding CalculationLineResult}" Grid.Column="6"  Grid.Row="1"/>
            <Button Content="{Binding BtnCleanLabel}" Grid.Column="7" Grid.Row="1"/>
            
            <Rectangle Grid.Row="2" Fill="Blue" Grid.ColumnSpan="8"/>

			<!-- Deuxième ligne -->
			<TextBlock Text="{Binding PercentageLabel}" Grid.Row="3"/>
			<TextBox Text="{Binding Percentage}" Grid.Row="4"/>
			
			<TextBlock Text="{Binding OrLabel}" Grid.Column="1" Grid.Row="4" />
			<TextBlock Text="{Binding PercentageValueLabel}" Grid.Column="2" Grid.Row="3"/>
			<TextBox Text="{Binding PercentageValue}" Grid.Column="2" Grid.Row="4"/>

			<TextBlock Text="{Binding OrLabel}" Grid.Column="3" Grid.Row="4" />
			<TextBlock Text="{Binding ReferenceAmountLabel}" Grid.Column="4" Grid.Row="3"/>
			<TextBox Text="{Binding ReferenceAmount}" Grid.Column="4" Grid.Row="4"/>

			<Button Content="{Binding BtnCleanLabel}" Grid.Column="7" Grid.Row="4"/>

            <Rectangle Grid.Row="5" Fill="Blue" Grid.ColumnSpan="8"/>
            <Rectangle Grid.Row="8" Fill="Blue" Grid.ColumnSpan="8"/>
        </Grid>

                
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
